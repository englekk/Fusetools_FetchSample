<!--[[
    작성자: 원강민
    블로그: https://blog.wonhada.com
    퓨즈 커뮤니티: https://www.facebook.com/groups/fusetools/
]]-->

<App>
    <StatusBarBackground />
    <Fuse.iOS.StatusBarConfig Style="Light"/>

    <Font ux:Global="KoreanFont" File="malgun.ttf" />
    <Router ux:Name="router" />

    <JavaScript>
        var print = debug_log;
        var Observable = require("FuseJS/Observable");

        // Daum API key (https://apis.daum.net/search/book)
        var api_key = "";

        // API 키가 없다면 아래 json 사용
        var jsonArr = [
            "https://dl.dropboxusercontent.com/u/1486638/examples/fuse_fetch1.json",
            "https://dl.dropboxusercontent.com/u/1486638/examples/fuse_fetch2.json",
            "https://dl.dropboxusercontent.com/u/1486638/examples/fuse_fetch3.json"
        ];
        var jsonArrCursor = 0;

        var items = Observable();
        var searchText = Observable();
        var selectedItem = Observable();

        // HTML 태그 없애기
        function stripHTML(text)
        {
            text = text.replace(/&lt;/gm, "<");
            text = text.replace(/&gt;/gm, ">");
            return text.replace(/<.*?>/gm, '');
        }

        // 숫자 포맷
        Number.prototype.numberFormat = function(n, x) {
            var re = '\\d(?=(\\d{' + (x || 3) + '})+' + (n > 0 ? '\\.' : '$') + ')';
            return this.toFixed(Math.max(0, ~~n)).replace(new RegExp(re, 'g'), '$&,');
        };

        // 검색 시작
        function search()
        {
            items.clear();

            // API 키가 있거나 없는 경우 json 데이터 가져오기
            var _url = 'https://apis.daum.net/search/book?apikey=' + api_key + '&q=' + searchText.value + '&output=json';
            if(api_key == "")
            {
                if(jsonArrCursor > jsonArr.length - 1) jsonArrCursor = 0;
                _url = jsonArr[jsonArrCursor];
                jsonArrCursor++;
            }

            fetch(_url, {
                method: 'GET',
                headers: { "Content-type": "application/json"}
            }).then(function(response) {
                //print("status: " + response.status);
                //print("response_ok: " + response.ok);
                return response.json();
            }).then(function(jsonData) {
                var _items = jsonData.channel.item;
                for(var i = 0; i < _items.length; ++i)
                {
                    _items[i].title = stripHTML(_items[i].title);
                    _items[i].sale_price = (_items[i].sale_price * 1).numberFormat();
                    items.add(_items[i]);
                }
            }).catch(function(err) {
                print("Error!!");
            });
        }

        // 상세보기 페이지로 이동
        function showDetailPage(args)
        {
            selectedItem.value = args.data;
            router.push("detailPage");
        }

        module.exports = {
            items,
            searchText,
            search,
            selectedItem,
            showDetailPage
        }
    </JavaScript>

    <Navigator DefaultTemplate="searchPage">
        <!-- 검색 페이지 -->
        <Page ux:Template="searchPage">
            <DockPanel Background="#ccc">
                <DockPanel ux:Name="topPanel" Dock="Top" Background="#333">
                    <TextInput ux:Name="text" PlaceholderText="Input here" PlaceholderColor="#777" Padding="10" TextColor="#fff" CaretColor="#fff" Dock="Fill" Value="{searchText}">
                        <Rectangle Layer="Background" Margin="4">
                            <Stroke Width="2" Brush="#fff" />
                        </Rectangle>
                    </TextInput>
                    <Basic.Button Text="Search" Dock="Right">
                        <Clicked>
                            <Set searchSV.ScrollPosition="0,0" />
                            <Callback Handler="{search}" />
                        </Clicked>
                    </Basic.Button>
                </DockPanel>

                <ScrollView ux:Name="searchSV">
                    <StackPanel>
                        <Each Items="{items}">
                            <DockPanel Padding="10" Background="#fff" Clicked="{showDetailPage}">
                                <Image Url="{cover_l_url}" Dock="Left" />
                                <Text Value="{title}" Font="KoreanFont" Dock="Fill" Width="60%" Margin="10" Alignment="CenterLeft" TextWrapping="Wrap" />
                            </DockPanel>
                        </Each>
                    </StackPanel>
                </ScrollView>
            </DockPanel>
        </Page>

        <!-- 상세보기 페이지 -->
        <Page ux:Template="detailPage">
            <DockPanel Background="#fff">
                <JavaScript>
                    function goBack()
                    {
                        router.goBack();
                    }

                    module.exports = {
                        goBack
                    }
                </JavaScript>

                <DockPanel ux:Name="topPanel" Dock="Top" Background="#333">
                    <Basic.Button Text="&lt; Back" Dock="Left">
                        <Clicked>
                            <Callback Handler="{goBack}" />
                            <Set detailSV.ScrollPosition="0,0" Delay="1" />
                        </Clicked>
                    </Basic.Button>
                </DockPanel>

                <ScrollView ux:Name="detailSV" Dock="Fill">
                    <StackPanel>
                        <Image Url="{selectedItem.cover_l_url}" />
                        <StackPanel Margin="10" Orientation="Horizontal">
                            <Text Value="Title: " Font="KoreanFont" />
                            <Text Value="{selectedItem.title}" Font="KoreanFont" Width="300" TextWrapping="Wrap" />
                        </StackPanel>
                        <StackPanel Margin="10" Orientation="Horizontal">
                            <Text Value="Price: " Font="KoreanFont" />
                            <Text Value="{selectedItem.sale_price}" Font="KoreanFont" Width="300" TextWrapping="Wrap" />
                        </StackPanel>
                        <StackPanel Margin="10" Orientation="Horizontal">
                            <Text Value="Description: " Font="KoreanFont" />
                            <Text Value="{selectedItem.description}" Font="KoreanFont" Width="250" TextWrapping="Wrap" />
                        </StackPanel>
                    </StackPanel>
                </ScrollView>
            </DockPanel>
        </Page>
    </Navigator>
</App>